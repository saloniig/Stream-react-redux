{"ast":null,"code":"var _jsxFileName = \"/home/saloni/Documents/react/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { fetchStreams } from '../../actions';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right floated content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, this.renderAdmin(stream), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, stream.title, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, stream.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/saloni/Documents/react/streams/client/src/components/streams/StreamList.js"],"names":["React","fetchStreams","connect","Link","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","streams","map","id","title","description","renderCreate","isSignedIn","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAwC;AACpCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWN,YAAX;AACH;;AAEDO,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,QAAGA,MAAM,CAACC,MAAP,KAAgB,KAAKH,KAAL,CAAWI,aAA9B,EAA4C;AACxC,0BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADJ;AAUH;AACJ;;AAEDC,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBL,MAAM,IAAE;AAClC,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACyB,KAAKP,WAAL,CAAiBC,MAAjB,CADzB,eAGI;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,MAAM,CAACO,KADZ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BP,MAAM,CAACQ,WAArC,CAFJ,CAJJ,CADJ;AAWH,KAZM,CAAP;AAaH;;AAELC,EAAAA,YAAY,GAAE;AACV,QAAG,KAAKX,KAAL,CAAWY,UAAd,EAAyB;AACrB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;AACJ;;AAEGC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADG,eAEX;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKR,UAAL,EAAjC,CAFW,CAAP;AAKH;;AApDmC;;AAuDxC,MAAMS,eAAe,GAAEC,KAAD,IAAS;AAC3B,SAAO;AACHT,IAAAA,OAAO,EAACU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB,CADL;AAEHF,IAAAA,aAAa,EAACW,KAAK,CAACG,IAAN,CAAWf,MAFtB;AAGHS,IAAAA,UAAU,EAACG,KAAK,CAACG,IAAN,CAAWN;AAHnB,GAAP;AAKH,CAND;;AAQA,eAAejB,OAAO,CAACmB,eAAD,EAAiB;AAACpB,EAAAA;AAAD,CAAjB,CAAP,CAAyCG,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport {fetchStreams} from '../../actions';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nclass StreamList extends React.Component{\n    componentDidMount(){\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream){\n        if(stream.userId===this.props.currentUserId){\n            return (\n                <div className=\"right floated content\">\n                    <button className=\"ui button primary\">\n                        Edit\n                    </button>\n                    <button className=\"ui button negative\">\n                        Delete\n                    </button>\n                </div>\n            );\n        }\n    }\n\n    renderList(){\n        return this.props.streams.map(stream=>{\n            return (\n                <div className=\"item\" key={stream.id}>\n                                        {this.renderAdmin(stream)}\n\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        {stream.title}\n                        <div className=\"description\">{stream.description}</div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\nrenderCreate(){\n    if(this.props.isSignedIn){\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\n    render(){\n        return <div>\n            <h2>Streams</h2>\n    <div className=\"ui celled list\">{this.renderList()}</div>\n\n        </div>;\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        streams:Object.values(state.streams),\n        currentUserId:state.auth.userId,\n        isSignedIn:state.auth.isSignedIn\n    };\n}\n\nexport default connect(mapStateToProps,{fetchStreams}) (StreamList);"]},"metadata":{},"sourceType":"module"}