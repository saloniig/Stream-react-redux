{"ast":null,"code":"var _jsxFileName = \"/home/saloni/Documents/react/streams/client/src/components/streams/StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }\n      }, \"Loading..\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/saloni/Documents/react/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","componentDidMount","params","id","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAoBC,UAApB,QAAqC,eAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAIpCC,QAJoC,GAI3BC,UAAU,IAAE;AACjB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAjC;AACH,KANmC;AAAA;;AACpCC,EAAAA,iBAAiB,GAAE;AACf,SAAKF,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBE,MAAjB,CAAwBC,EAA/C;AACH;;AAKDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADG,eAEH,oBAAC,UAAD;AACA,MAAA,aAAa,EAAEhB,CAAC,CAACiB,IAAF,CAAO,KAAKP,KAAL,CAAWM,MAAlB,EAAyB,OAAzB,EAAiC,aAAjC,CADf;AAEA,MAAA,QAAQ,EAAE,KAAKR,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAMH;;AAlBuC;;AAqBxC,MAAMU,eAAe,GAAC,CAACC,KAAD,EAAOC,QAAP,KAAkB;AACpC,SAAO;AAACJ,IAAAA,MAAM,EAACG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeE,MAAf,CAAsBC,EAApC;AAAR,GAAP;AACH,CAFD;;AAIA,eAAeZ,OAAO,CAACgB,eAAD,EAAiB;AAACf,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAAjB,CAAP,CAAmDE,UAAnD,CAAf","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStream,editStream} from '../../actions';\nimport StreamForm from './StreamForm';\nclass StreamEdit extends React.Component{\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    onSubmit=formValues=>{\n        this.props.editStream(this.props.match)\n    };\n\n    render(){ \n        if(!this.props.stream){\n            return <div>Loading..</div>;\n        }\n    return <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n        initialValues={_.pick(this.props.stream,'title','description')}\n        onSubmit={this.onSubmit} />\n    </div>;\n}\n}\n\nconst mapStateToProps=(state,ownProps)=>{\n    return {stream:state.streams[ownProps.match.params.id]};\n}\n\nexport default connect(mapStateToProps,{fetchStream,editStream}) (StreamEdit);\n"]},"metadata":{},"sourceType":"module"}