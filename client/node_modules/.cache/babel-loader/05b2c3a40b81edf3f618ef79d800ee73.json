{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth();\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/$id`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id = async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/saloni/Documents/react/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SAAQA,OAAR,EAAgBC,QAAhB,EAAyBC,aAAzB,EACIC,YADJ,EACiBC,aADjB,EAC+BC,aAD/B,EAC6CC,WAD7C,QAEO,SAFP;AAGA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,MAAMC,MAAM,GAAEC,MAAD,IAAU;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAACX,OADF;AAEHY,IAAAA,OAAO,EAACF;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAC,MAAI;AACrB,SAAO;AACHF,IAAAA,IAAI,EAACV;AADF,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAGC,UAAU,IAAE,OAAOC,QAAP,EAAgBC,QAAhB,KAA2B;AAC/D,QAAM;AAACP,IAAAA;AAAD,MAAWO,QAAQ,GAAGC,IAAX,EAAjB;AACA,QAAMC,QAAQ,GAAC,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAAwB,EAAC,GAAGL,UAAJ;AAAeL,IAAAA;AAAf,GAAxB,CAArB;AACAM,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACT,aAAN;AAAoBU,IAAAA,OAAO,EAACO,QAAQ,CAACE;AAArC,GAAD,CAAR;AACAb,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH,CALM;AAQP,OAAO,MAAMC,YAAY,GAAC,MAAI,MAAMP,QAAN,IAAgB;AAC1C,QAAMG,QAAQ,GAAC,MAAMZ,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAArB;AACAR,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACP,aAAN;AAAoBQ,IAAAA,OAAO,EAACO,QAAQ,CAACE;AAArC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAEC,EAAD,IAAM,MAAMV,QAAN,IAAgB;AAC3C,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACR,YAAN;AAAmBS,IAAAA,OAAO,EAACO,QAAQ,CAACE;AAApC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAC,CAACD,EAAD,EAAIX,UAAJ,KAAiB,MAAMC,QAAN,IAAgB;AACrD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACqB,GAAR,CAAa,cAAb,EAA2Bb,UAA3B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACL,WAAN;AAAkBM,IAAAA,OAAO,EAACO,QAAQ,CAACE;AAAnC,GAAD,CAAR;AAEH,CAJM;AAMP,OAAO,MAAMQ,YAAY,GAAEH,EAAD,GAAK,MAAMV,QAAN,IAAgB;AAC3C,QAAMT,OAAO,CAACuB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AACAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACN,aAAN;AAAoBO,IAAAA,OAAO,EAACc;AAA5B,GAAD,CAAR;AACH,CAHM","sourcesContent":["import {SIGN_IN,SIGN_OUT,CREATE_STREAM,\n    FETCH_STREAM,FETCH_STREAMS,DELETE_STREAM,EDIT_STREAM\n} from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\nexport const signIn=(userId)=>{\n    return {\n        type:SIGN_IN,\n        payload:userId\n    };\n};\n\nexport const signOut=()=>{\n    return {\n        type:SIGN_OUT\n    };\n};\n\nexport const createStream = formValues=>async (dispatch,getState)=>{\n    const {userId} = getState().auth();\n    const response=await streams.post('/streams',{...formValues,userId});\n    dispatch({type:CREATE_STREAM,payload:response.data});\n    history.push('/');\n};\n\n\nexport const fetchStreams=()=>async dispatch=>{\n    const response=await streams.get('/streams');\n    dispatch({type:FETCH_STREAMS,payload:response.data});\n};\n\nexport const fetchStream=(id)=>async dispatch=>{\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({type:FETCH_STREAM,payload:response.data});\n};\n\nexport const editStream=(id,formValues)=>async dispatch=>{\n    const response = await streams.put(`/streams/$id`,formValues);\n    dispatch({type:EDIT_STREAM,payload:response.data});\n\n};\n\nexport const deleteStream=(id)=async dispatch=>{\n    await streams.delete(`/streams/${id}`);\n    dispatch({type:DELETE_STREAM,payload:id});\n};"]},"metadata":{},"sourceType":"module"}