{"ast":null,"code":"var _jsxFileName = \"/home/saloni/Documents/react/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"Create stream\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.title) {\n    clearSubmitErrors.title = 'You must enter title';\n  }\n\n  if (!formValues.description) {\n    clearSubmitErrors.description = 'You must enter description';\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\nexport default connect()(formWrapped);","map":{"version":3,"sources":["/home/saloni/Documents/react/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","Component","onSubmit","formValues","props","render","validate","error","title","clearSubmitErrors","description","errors","formWrapped","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA0C;AAAA;AAAA;;AAAA,SAG1CC,QAH0C,GAGhCC,UAAD,IAAc;AACnB,WAAKC,KAAL,CAAWN,YAAX,CAAwBK,UAAxB;AACH,KALyC;AAAA;;AAQtCE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAKH;;AAdqC;;AAiB1C,MAAMC,QAAQ,GAACH,UAAU,IAAE;AACvB,QAAMI,KAAK,GAAC,EAAZ;;AACA,MAAG,CAACJ,UAAU,CAACK,KAAf,EAAqB;AACjBC,IAAAA,iBAAiB,CAACD,KAAlB,GAAwB,sBAAxB;AACH;;AACD,MAAG,CAACL,UAAU,CAACO,WAAf,EAA2B;AACvBD,IAAAA,iBAAiB,CAACC,WAAlB,GAA8B,4BAA9B;AACH;;AACD,SAAOC,MAAP;AACH,CATD;;AAWA,MAAMC,WAAW,GAAEC,SAAS,CAAC;AACzBC,EAAAA,IAAI,EAAC,cADoB;AAEzBR,EAAAA;AAFyB,CAAD,CAAT,CAGfN,YAHe,CAAnB;AAKA,eAAeH,OAAO,GAAGe,WAAH,CAAtB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStream} from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component{\n\n\nonSubmit=(formValues)=>{\n    this.props.createStream(formValues);\n}\n\n\n    render(){\n        return (\n            <div>\n                <h3>Create stream</h3>\n            </div>\n        );\n    }\n}\n\nconst validate=formValues=>{\n    const error={};\n    if(!formValues.title){\n        clearSubmitErrors.title='You must enter title';\n    }\n    if(!formValues.description){\n        clearSubmitErrors.description='You must enter description';\n    }\n    return errors;\n};\n\nconst formWrapped= reduxForm({\n    form:'streamCreate',\n    validate\n}) (StreamCreate);\n\nexport default connect()(formWrapped);"]},"metadata":{},"sourceType":"module"}