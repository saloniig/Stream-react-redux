{"ast":null,"code":"var _jsxFileName = \"/home/saloni/Documents/react/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 20\n        }\n      }, \"Loading..\");\n    }\n\n    const {\n      title,\n      desciption\n    } = this.props.stream;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"desciption\"));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/saloni/Documents/react/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","title","desciption","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACpCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;;AAED,UAAK;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAoB,KAAKP,KAAL,CAAWK,MAApC;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,KAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAMH;;AAnBmC;;AAsBxC,MAAME,eAAe,GAAC,CAACC,KAAD,EAAOC,QAAP,KAAkB;AACpC,SAAO;AAACL,IAAAA,MAAM,EAACI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAR,GAAP;AACH,CAFD;;AAOA,eAAeR,OAAO,CAACa,eAAD,EAAiB;AAACZ,EAAAA;AAAD,CAAjB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStream} from '../../actions';\n\nclass StreamShow extends React.Component{\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    render(){\n\n        if(!this.props.stream){\n            return <div>Loading..</div>\n        }\n\n        const{title,desciption} =this.props.stream;\n\n        return (\n            <div>\n                <h1>{title}</h1>\n                <h5>desciption</h5>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps=(state,ownProps)=>{\n    return {stream:state.streams[ownProps.match.params.id]}\n};\n\n\n\n\nexport default connect(mapStateToProps,{fetchStream}) (StreamShow);"]},"metadata":{},"sourceType":"module"}